import TreePackage.DecisionTree;import TreePackage.DecisionTreeInterface;/* A class that represents a guessing game. COMPSCI 105 Assignment 2 - Part 2 Name:  UPI:  */public class GuessingGame {	private DecisionTreeInterface<String> tree;	public GuessingGame(String question, String noAnswer, String yesAnswer) {		DecisionTree<String> no = new DecisionTree<String>(noAnswer);		DecisionTree<String> yes = new DecisionTree<String>(yesAnswer);		tree = new DecisionTree<String>(question, no, yes);	} // end default constructor	public void play() {		tree.reset();		/*************************		 * Task 4		 */		assert tree.isAnswer(); // Assertion: leaf is reached		// make guess		/*************************		 * Task 4		 */	} // end play	private void learn() {		System.out.println("I give up; what are you thinking of? ");		/*************************		 * Task 3		 */	} // end learn	/**	 * Replaces the current node, which must be a leaf, with a question and two	 * answers. question is the question ending in '?' and used for extending	 * the tree noAnswer is the response when the answer to the question is 'no'	 * yesAnswer is the response when the answer to the question is 'yes'	 */	private void extendTree(String question, String noAnswer, String yesAnswer) {		if (question.contains("?")&&tree.isAnswer()) {				tree.setAnswers(noAnswer, yesAnswer);					}		/*************************		 * Task 2		 */	} // end extendTree} // end GuessingGame