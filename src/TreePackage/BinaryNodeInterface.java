package TreePackage;/*	An interface for a node in a binary tree.    COMPSCI 105	Assignment 2 - Part 2	Name: 	UPI: */interface BinaryNodeInterface<T>{   /* Retrieves the data portion of the node*/   public T getData();   /* Sets the data portion of the node*/   public void setData(T newData);   /* Retrieves the left child of the node */   public BinaryNodeInterface<T> getLeftChild();   /* Retrieves the right child of the node */   public BinaryNodeInterface<T> getRightChild();   /* Sets the node's left child to a given node */   public void setLeftChild(BinaryNodeInterface<T> leftChild);   /* Sets the nodess right child to a given node */   public void setRightChild(BinaryNodeInterface<T> rightChild);   /* Checks whether the node has a left child */   public boolean hasLeftChild();   /* Checks whether the node has a right child */   public boolean hasRightChild();   /** Checks whether this node is a leaf node */   public boolean isLeaf();   /* Counts the nodes in the subtree rooted at the node */   public int getNumberOfNodes();   /* Computes the height of the subtree rooted at this node */   public int getHeight();   /* Copies the subtree rooted at this node */   public BinaryNodeInterface<T> copy();} // end BinaryNodeInterface